{"version":3,"sources":["_actions/types.js","components/Config.js","hoc/auth.js","_actions/user_actions.js","components/views/LandingPage/Sections/MainImage.js","components/views/commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/Favorite.js","components/views/MovieDetail/MovieDetail.js","components/views/MovieDetail/Sections/PersonDetail.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_KEY","API_URL","IMAGE_BASE_URL","SpecificComponent","option","adminRoute","props","user","useSelector","state","dispatch","useDispatch","useEffect","type","payload","axios","get","concat","then","response","data","isAuth","isAdmin","history","push","React","createElement","Object","assign","MainImage","style","backgroundImage","image","backgroundColor","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","title","fontSize","text","GridCards","landingPage","Col","lg","md","xs","marginBottom","href","movieId","src","alt","movieName","paddingTop","data-slot","fill","strokeWidth","stroke","viewBox","xmlns","aria-hidden","strokeLinecap","strokeLinejoin","d","fontWeight","marginTop","textAlign","id","textDecoration","borderRadius","boxShadow","objectFit","castName","paddingBottom","characterName","LandingPage","movies","setMovies","useState","mainImage","setMainImage","currentPage","setCurrentPage","endpoint","fetchMovies","fetch","json","results","page","margin","backdrop_path","original_title","overview","Row","gutter","map","movie","index","Fragment","key","poster_path","display","justifyContent","Button","onClick","loadMoreItems","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","Formik","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","className","level","Form","Item","Input","prefix","Icon","placeholder","value","onChange","onBlur","border","padding","Checkbox","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","Menu","SubMenu","ItemGroup","LeftMenu","mode","logoutHandler","status","userData","NavBar","visible","setVisible","zIndex","RightMenu","showDrawer","Drawer","placement","closable","onClose","Footer","flexDirection","alignItems","MovieInfo","Descriptions","bordered","release_date","revenue","runtime","vote_average","vote_count","popularity","Favorite","userFrom","movieTitle","movieInfo","moviePost","movieRunTime","favoriteNumber","setFavoriteNumber","favorited","setFavorited","variables","Axios","onClickFavorite","MovieDetail","useParams","setMovie","casts","setCasts","actorToggle","setActorToggle","endpointCast","endpointInfo","cast","toggleActorView","profile_path","character","PersonDetail","personId","personInfo","setPersonInfo","console","log","endpointPerson","place_of_birth","birthday","FavoritePage","favorites","setFavorites","fetchFavoredMovie","renderCards","favorite","content","onClickDelete","App","Suspense","fallback","minHeight","Switch","Route","exact","path","component","Auth","LoginPage","Boolean","location","hostname","match","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","Provider","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ogCAAO,MCGMA,EAAU,mCACVC,EAAU,gCACVC,EAAiB,8B,YCAf,WAAUC,EAAmBC,EAAQC,EAAa,MAmC7D,OAlCA,SAA6BC,GAEzB,IAAIC,EAAOC,YAAYC,GAASA,EAAMF,MACtC,MAAMG,EAAWC,cA2BjB,OAzBAC,oBAAU,KAENF,ECoBD,CACHG,KHhCiB,YGiCjBC,QALYC,IAAMC,IAAI,GAADC,OF7BF,aE6BiB,UACvCC,KAAKC,GAAYA,EAASC,QDlBFF,KAAKC,IAEbA,EAASL,QAAQO,QAOdhB,IAAec,EAASL,QAAQQ,UAKjB,IAAXlB,IAJJE,EAAMiB,QAAQC,KAAK,KAPnBpB,GACAE,EAAMiB,QAAQC,KAAK,aAiBhC,IAGCC,IAAAC,cAACvB,EAAiBwB,OAAAC,OAAA,GAAKtB,EAAK,CAAEC,KAAMA,OEnCjC,SAASsB,EAAUvB,GAChC,OACEmB,IAAAC,cAAA,OACEI,MAAO,CACLC,gBAAgB,4GAADd,OACNX,EAAM0B,MAAK,MACpBC,gBAAiB,UACjBC,OAAQ,QACRC,eAAgB,cAChBC,mBAAoB,iBACpBC,MAAO,OACPC,SAAU,aAGZb,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEI,MAAO,CACLQ,SAAU,WACVC,SAAU,QACVC,OAAQ,OACRC,WAAY,SAGdhB,IAAAC,cAAA,MAAII,MAAO,CAAEY,MAAO,UAAYpC,EAAMqC,OACtClB,IAAAC,cAAA,KAAGI,MAAO,CAAEY,MAAO,QAASE,SAAU,WAAatC,EAAMuC,S,aCvBpD,SAASC,EAAUxC,GAEhC,OAAIA,EAAMyC,YAGNtB,IAAAC,cAACsB,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACrB1B,IAAAC,cAAA,OACEI,MAAO,CACLQ,SAAU,WACVJ,OAAQ,QACRkB,aAAc,SAGhB3B,IAAAC,cAAA,KAAG2B,KAAI,UAAApC,OAAYX,EAAMgD,UACtBhD,EAAM0B,MACLP,IAAAC,cAAA,OACEI,MAAO,CAAEO,MAAO,OAAQH,OAAQ,QAChCqB,IAAKjD,EAAM0B,MACXwB,IAAKlD,EAAMmD,YAGbhC,IAAAC,cAAA,OACEI,MAAO,CACLO,MAAO,OACPH,OAAQ,QACRwB,WAAY,UAGdjC,IAAAC,cAAA,OACEiC,YAAU,OACVC,KAAK,OACLC,YAAY,MACZC,OAAO,eACPC,QAAQ,YACRC,MAAM,6BACNC,cAAY,QAEZxC,IAAAC,cAAA,QACEwC,cAAc,QACdC,eAAe,QACfC,EAAE,suDAGN3C,IAAAC,cAAA,KACEI,MAAO,CACLY,MAAO,QACPE,SAAU,OACVyB,WAAY,OACZjB,aAAc,OACdkB,UAAW,SACXC,UAAW,WAGZjE,EAAMmD,eAWnBhC,IAAAC,cAACsB,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACrB1B,IAAAC,cAAA,OACEI,MAAO,CACLQ,SAAU,WACVJ,OAAQ,QACRkB,aAAc,SAGhB3B,IAAAC,cAAA,KACE2B,KAAI,WAAApC,OAAaX,EAAMkE,IACvB1C,MAAO,CAAE2C,eAAgB,OAAQ/B,MAAO,UAEvCpC,EAAM0B,MACLP,IAAAC,cAAA,OACEI,MAAO,CACLO,MAAO,OACPH,OAAQ,MACRwC,aAAc,MACdC,UAAW,+BACXC,UAAW,SAEbrB,IAAKjD,EAAM0B,MACXwB,IAAKlD,EAAMuE,WAGbpD,IAAAC,cAAA,OACEI,MAAO,CACL4C,aAAc,MACdrC,MAAO,OACPH,OAAQ,MACRwB,WAAY,UACZoB,cAAe,UACfH,UAAW,iCAGblD,IAAAC,cAAA,OACEkC,KAAK,OACLG,QAAQ,YACRC,MAAM,6BACNC,cAAY,QAEZxC,IAAAC,cAAA,QAAM0C,EAAE,mLAKd3C,IAAAC,cAAA,WACED,IAAAC,cAAA,KACEI,MAAO,CACLc,SAAU,SACVyB,WAAY,OACZjB,aAAc,OACdkB,UAAW,WAGZhE,EAAMuE,UAETpD,IAAAC,cAAA,KAAGI,MAAO,CAAEc,SAAU,SAAU6B,eAAgB,SAC7CnE,EAAMyE,mB,sBCtHR,SAASC,IACtB,MAAOC,EAAQC,GAAaC,mBAAS,KAC9BC,EAAWC,GAAgBF,mBAAS,OACpCG,EAAaC,GAAkBJ,mBAAS,GAG/CvE,oBAAU,KACR,MAAM4E,EAAQ,GAAAvE,OAAMhB,EAAO,0BAAAgB,OAAyBjB,EAAO,uBAC3DyF,EAAYD,IACX,IAGH,MAOMC,EAAeD,IACnBE,MAAMF,GACHtE,KAAMC,GAAaA,EAASwE,QAC5BzE,KAAMC,IAEL+D,EAAU,IAAID,KAAW9D,EAASyE,UAClCP,EAAalE,EAASyE,QAAQ,IAC9BL,EAAepE,EAAS0E,SAI9B,OACEpE,IAAAC,cAAA,OAAKI,MAAO,CAAEO,MAAO,OAAQyD,OAAQ,MAElCV,GACC3D,IAAAC,cAACG,EAAS,CACRG,MAAK,GAAAf,OAAKf,EAAc,SAAAe,OAAQmE,EAAUW,eAC1CpD,MAAOyC,EAAUY,eACjBnD,KAAMuC,EAAUa,WAIpBxE,IAAAC,cAAA,OAAKI,MAAO,CAAEO,MAAO,MAAOyD,OAAQ,cAClCrE,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,WAGAD,IAAAC,cAACwE,IAAG,CAACC,OAAQ,CAAC,GAAI,KACflB,GACCA,EAAOmB,IAAI,CAACC,EAAOC,IACjB7E,IAAAC,cAACD,IAAM8E,SAAQ,CAACC,IAAKF,GACnB7E,IAAAC,cAACoB,EAAS,CACRC,aAAW,EACXf,MACEqE,EAAMI,YAAY,GAAAxF,OACXf,EAAc,QAAAe,OAAOoF,EAAMI,aAC9B,KAENnD,QAAS+C,EAAM7B,GACff,UAAW4C,EAAML,qBAM7BvE,IAAAC,cAAA,OAAKI,MAAO,CAAE4E,QAAS,OAAQC,eAAgB,WAC7ClF,IAAAC,cAACkF,IAAM,CAACC,QArDQC,KACpB,MAAMtB,EAAQ,GAAAvE,OAAMhB,EAAO,0BAAAgB,OAAyBjB,EAAO,sBAAAiB,OACzDqE,EAAc,GAEhBG,EAAYD,KAiDwB,e,iEChExC,MAAM,MAAEuB,GAAUC,IA0IHC,mBAxIf,SAAmB3G,GACjB,MAAMI,EAAWC,cACXuG,IAAoBC,aAAaC,QAAQ,eAExCC,EAAkBC,GAAuBnC,mBAAS,KAClDoC,EAAYC,GAAiBrC,mBAAS+B,GAEvCO,EAAmBA,KACvBD,GAAeD,IAGXG,EAAeP,aAAaC,QAAQ,cAAgBD,aAAaC,QAAQ,cAAgB,GAE/F,OACE3F,IAAAC,cAACiG,IAAM,CACLC,cAAe,CACbC,MAAOH,EACPI,SAAU,IAEZC,iBAAkBC,WAAaC,MAAM,CACnCJ,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,0BAEdE,SAAUA,CAACC,GAAUC,oBACnBC,WAAW,KACT,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,UAGnBpH,EJzBH,SAAmB8H,GAItB,MAAO,CACH3H,KHxBkB,aGyBlBC,QALYC,IAAM0H,KAAK,GAADxH,OFnBH,aEmBkB,UAASuH,GACrCtH,KAAKC,GAAYA,EAASC,OIuBxBsH,CAAUF,IAChBtH,KAAKC,IACAA,EAASL,QAAQ6H,cACnBC,OAAOzB,aAAa0B,QAAQ,SAAU1H,EAASL,QAAQgI,SACpC,IAAfvB,EACFqB,OAAOzB,aAAa0B,QAAQ,aAAcR,EAAO7D,IAEjD2C,aAAa4B,WAAW,cAE1BzI,EAAMiB,QAAQC,KAAK,MAEnB8F,EAAoB,8CAGvB0B,MAAMC,IACL3B,EAAoB,4CACpBiB,WAAW,KACTjB,EAAoB,KACnB,OAEPgB,GAAc,IACb,OAGJhI,IACC,MAAM,OACJ+H,EAAM,QACNa,EAAO,OACPC,EAAM,MACNC,EAAK,aACLC,EAAY,aACZC,EAAY,WACZC,EAAU,aACVC,EAAY,YACZC,GACEnJ,EACJ,OACEmB,IAAAC,cAAA,OAAKgI,UAAU,OAEbjI,IAAAC,cAACqF,EAAK,CAAC4C,MAAO,GAAG,UACjBlI,IAAAC,cAAA,QAAM0G,SAAUoB,EAAc1H,MAAO,CAAEO,MAAO,UAE5CZ,IAAAC,cAACkI,IAAKC,KAAI,CAAC3B,UAAQ,GACjBzG,IAAAC,cAACoI,IAAK,CACJtF,GAAG,QACHuF,OAAQtI,IAAAC,cAACsI,IAAI,CAACnJ,KAAK,OAAOiB,MAAO,CAAEY,MAAO,qBAC1CuH,YAAY,mBACZpJ,KAAK,QACLqJ,MAAO7B,EAAOR,MACdsC,SAAUb,EACVc,OAAQb,EACRG,UACEP,EAAOtB,OAASqB,EAAQrB,MAAQ,mBAAqB,eAGxDsB,EAAOtB,OAASqB,EAAQrB,OACvBpG,IAAAC,cAAA,OAAKgI,UAAU,kBAAkBP,EAAOtB,QAI5CpG,IAAAC,cAACkI,IAAKC,KAAI,CAAC3B,UAAQ,GACjBzG,IAAAC,cAACoI,IAAK,CACJtF,GAAG,WACHuF,OAAQtI,IAAAC,cAACsI,IAAI,CAACnJ,KAAK,OAAOiB,MAAO,CAAEY,MAAO,qBAC1CuH,YAAY,sBACZpJ,KAAK,WACLqJ,MAAO7B,EAAOP,SACdqC,SAAUb,EACVc,OAAQb,EACRG,UACEP,EAAOrB,UAAYoB,EAAQpB,SAAW,mBAAqB,eAG9DqB,EAAOrB,UAAYoB,EAAQpB,UAC1BrG,IAAAC,cAAA,OAAKgI,UAAU,kBAAkBP,EAAOrB,WAI3CT,GACC5F,IAAAC,cAAA,aAAQD,IAAAC,cAAA,KAAGI,MAAO,CAAEY,MAAO,YAAaE,SAAU,SAAUyH,OAAQ,YAAaC,QAAS,OAAQ5F,aAAc,SAAW2C,IAG7H5F,IAAAC,cAACkI,IAAKC,KAAI,KACRpI,IAAAC,cAAC6I,IAAQ,CAAC/F,GAAG,aAAa2F,SAAU1C,EAAkB+C,QAASjD,GAAa,eAC5E9F,IAAAC,cAAA,KAAGgI,UAAU,oBAAoBrG,KAAK,cAAcvB,MAAO,CAAE2I,MAAO,UAAW,mBAG/EhJ,IAAAC,cAAA,WACED,IAAAC,cAACkF,IAAM,CAAC/F,KAAK,UAAU6J,SAAS,SAAShB,UAAU,oBAAoB5H,MAAO,CAAE6I,SAAU,QAAUC,SAAUvB,EAAcjB,SAAUoB,GAAc,WAGhJ,MACH/H,IAAAC,cAAA,KAAG2B,KAAK,aAAY,yB,kBC3HvC,MAAMwH,EAAiB,CACrBC,SAAU,CACR3H,GAAI,CAAE4H,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACV9H,GAAI,CAAE4H,KAAM,IACZC,GAAI,CAAED,KAAM,MAGVG,EAAqB,CACzBD,WAAY,CACV9H,GAAI,CACF4H,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KA2KCC,MAtKf,SAAsB9K,GACpB,MAAMI,EAAWC,cACjB,OAEEc,IAAAC,cAACiG,IAAM,CACLC,cAAe,CACbC,MAAO,GACPwD,SAAU,GACVC,KAAM,GACNxD,SAAU,GACVyD,gBAAiB,IAEnBxD,iBAAkBC,WAAaC,MAAM,CACnCqD,KAAMtD,WACHE,SAAS,oBACZmD,SAAUrD,WACPE,SAAS,yBACZL,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,wBACZqD,gBAAiBvD,WACdwD,MAAM,CAACxD,MAAQ,YAAa,MAAO,wBACnCE,SAAS,kCAEdE,SAAUA,CAACC,GAAUC,oBACnBC,WAAW,KAET,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,SACjBwD,KAAMjD,EAAOiD,KACbG,SAAUpD,EAAOoD,SACjBzJ,MAAM,8BAADf,OAAgCyK,MAASC,OAAM,iBAGtDjL,ELjEH,SAAsB8H,GAIzB,MAAO,CACH3H,KHbqB,gBGcrBC,QALYC,IAAM0H,KAAK,GAADxH,OFTH,aESkB,aAAYuH,GAChDtH,KAAKC,GAAYA,EAASC,OK+DhBwK,CAAapD,IAAetH,KAAKC,IACpCA,EAASL,QAAQ+K,QACnBvL,EAAMiB,QAAQC,KAAK,UAEnBsK,MAAM3K,EAASL,QAAQmI,IAAI8C,UAI/BzD,GAAc,IACb,OAGJhI,IACC,MAAM,OACJ+H,EAAM,QACNa,EAAO,OACPC,EAAM,MACNC,EAAK,aACLC,EAAY,aACZC,EAAY,WACZC,EAAU,aACVC,EAAY,YACZC,GACEnJ,EACJ,OACEmB,IAAAC,cAAA,OAAKgI,UAAU,OACbjI,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAACkI,IAAIjI,OAAAC,OAAA,CAACE,MAAO,CAAE6I,SAAU,UAAeE,EAAc,CAAEzC,SAAUoB,IAEhE/H,IAAAC,cAACkI,IAAKC,KAAI,CAAC3B,UAAQ,EAAC8D,MAAM,QACxBvK,IAAAC,cAACoI,IAAK,CACJtF,GAAG,OACHyF,YAAY,kBACZpJ,KAAK,OACLqJ,MAAO7B,EAAOiD,KACdnB,SAAUb,EACVc,OAAQb,EACRG,UACEP,EAAOmC,MAAQpC,EAAQoC,KAAO,mBAAqB,eAGtDnC,EAAOmC,MAAQpC,EAAQoC,MACtB7J,IAAAC,cAAA,OAAKgI,UAAU,kBAAkBP,EAAOmC,OAI5C7J,IAAAC,cAACkI,IAAKC,KAAI,CAAC3B,UAAQ,EAAC8D,MAAM,aACxBvK,IAAAC,cAACoI,IAAK,CACJtF,GAAG,WACHyF,YAAY,uBACZpJ,KAAK,OACLqJ,MAAO7B,EAAOgD,SACdlB,SAAUb,EACVc,OAAQb,EACRG,UACEP,EAAOkC,UAAYnC,EAAQmC,SAAW,mBAAqB,eAG9DlC,EAAOkC,UAAYnC,EAAQmC,UAC1B5J,IAAAC,cAAA,OAAKgI,UAAU,kBAAkBP,EAAOkC,WAI5C5J,IAAAC,cAACkI,IAAKC,KAAI,CAAC3B,UAAQ,EAAC8D,MAAM,QAAQC,aAAW,EAACC,eAAgB/C,EAAOtB,OAASqB,EAAQrB,MAAQ,QAAU,WACtGpG,IAAAC,cAACoI,IAAK,CACJtF,GAAG,QACHyF,YAAY,mBACZpJ,KAAK,QACLqJ,MAAO7B,EAAOR,MACdsC,SAAUb,EACVc,OAAQb,EACRG,UACEP,EAAOtB,OAASqB,EAAQrB,MAAQ,mBAAqB,eAGxDsB,EAAOtB,OAASqB,EAAQrB,OACvBpG,IAAAC,cAAA,OAAKgI,UAAU,kBAAkBP,EAAOtB,QAI5CpG,IAAAC,cAACkI,IAAKC,KAAI,CAAC3B,UAAQ,EAAC8D,MAAM,WAAWC,aAAW,EAACC,eAAgB/C,EAAOrB,UAAYoB,EAAQpB,SAAW,QAAU,WAC/GrG,IAAAC,cAACoI,IAAK,CACJtF,GAAG,WACHyF,YAAY,sBACZpJ,KAAK,WACLqJ,MAAO7B,EAAOP,SACdqC,SAAUb,EACVc,OAAQb,EACRG,UACEP,EAAOrB,UAAYoB,EAAQpB,SAAW,mBAAqB,eAG9DqB,EAAOrB,UAAYoB,EAAQpB,UAC1BrG,IAAAC,cAAA,OAAKgI,UAAU,kBAAkBP,EAAOrB,WAI5CrG,IAAAC,cAACkI,IAAKC,KAAI,CAAC3B,UAAQ,EAAC8D,MAAM,UAAUC,aAAW,GAC7CxK,IAAAC,cAACoI,IAAK,CACJtF,GAAG,kBACHyF,YAAY,6BACZpJ,KAAK,WACLqJ,MAAO7B,EAAOkD,gBACdpB,SAAUb,EACVc,OAAQb,EACRG,UACEP,EAAOoC,iBAAmBrC,EAAQqC,gBAAkB,mBAAqB,eAG5EpC,EAAOoC,iBAAmBrC,EAAQqC,iBACjC9J,IAAAC,cAAA,OAAKgI,UAAU,kBAAkBP,EAAOoC,kBAI5C9J,IAAAC,cAACkI,IAAKC,KAASqB,EACbzJ,IAAAC,cAACkF,IAAM,CAACC,QAAS2C,EAAc3I,KAAK,UAAU+J,SAAUvB,GAAc,gB,SC3LtE8C,IAAKC,QACCD,IAAKE,UAeZC,MAbf,SAAkBhM,GAChB,OACEmB,IAAAC,cAACyK,IAAI,CAACI,KAAMjM,EAAMiM,MAChB9K,IAAAC,cAACyK,IAAKtC,KAAI,CAACrD,IAAI,QACb/E,IAAAC,cAAA,KAAG2B,KAAK,KAAI,SAEd5B,IAAAC,cAACyK,IAAKtC,KAAI,CAACrD,IAAI,YACb/E,IAAAC,cAAA,KAAG2B,KAAK,aAAY,eC+Bb4D,mBAnCf,SAAmB3G,GACjB,MAAMC,EAAOC,YAAYC,GAASA,EAAMF,MAElCiM,EAAgBA,KACpBzL,IAAMC,IAAI,GAADC,OTXc,aSWC,YAAWC,KAAKC,IACd,MAApBA,EAASsL,OACXnM,EAAMiB,QAAQC,KAAK,UAEnBsK,MAAM,qBAKZ,OAAIvL,EAAKmM,WAAanM,EAAKmM,SAASrL,OAEhCI,IAAAC,cAACyK,IAAI,CAACI,KAAMjM,EAAMiM,MAChB9K,IAAAC,cAACyK,IAAKtC,KAAI,CAACrD,IAAI,QACb/E,IAAAC,cAAA,KAAG2B,KAAK,UAAS,WAEnB5B,IAAAC,cAACyK,IAAKtC,KAAI,CAACrD,IAAI,OACb/E,IAAAC,cAAA,KAAG2B,KAAK,aAAY,YAMxB5B,IAAAC,cAACyK,IAAI,CAACI,KAAMjM,EAAMiM,MAChB9K,IAAAC,cAACyK,IAAKtC,KAAI,CAACrD,IAAI,UACb/E,IAAAC,cAAA,KAAGmF,QAAS2F,GAAe,e,gBCmBtBG,MAjDf,WACE,MAAOC,EAASC,GAAc1H,oBAAS,GAUvC,OACE1D,IAAAC,cAAA,OACEgI,UAAU,OACV5H,MAAO,CAAEQ,SAAU,QAASwK,OAAQ,EAAGzK,MAAO,SAE9CZ,IAAAC,cAAA,OAAKgI,UAAU,cACbjI,IAAAC,cAAA,KAAG2B,KAAK,KAAI,gBAEd5B,IAAAC,cAAA,OAAKgI,UAAU,mBACbjI,IAAAC,cAAA,OAAKgI,UAAU,aACbjI,IAAAC,cAAC4K,EAAQ,CAACC,KAAK,gBAEjB9K,IAAAC,cAAA,OAAKgI,UAAU,cACbjI,IAAAC,cAACqL,EAAS,CAACR,KAAK,gBAElB9K,IAAAC,cAACkF,IAAM,CACL8C,UAAU,sBACV7I,KAAK,UACLgG,QA1BWmG,KACjBH,GAAW,KA2BLpL,IAAAC,cAACsI,IAAI,CAACnJ,KAAK,iBAEbY,IAAAC,cAACuL,IAAM,CACLtK,MAAM,eACNuK,UAAU,QACVxD,UAAU,cACVyD,UAAU,EACVC,QA/BQA,KACdP,GAAW,IA+BLD,QAASA,GAETnL,IAAAC,cAAC4K,EAAQ,CAACC,KAAK,WACf9K,IAAAC,cAACqL,EAAS,CAACR,KAAK,eCjCXc,MAZf,WACI,OACI5L,IAAAC,cAAA,OAAKI,MAAO,CACRI,OAAQ,OAAQwE,QAAS,OACzB4G,cAAe,SAAUC,WAAY,SACrC5G,eAAgB,SAAU/D,SAAS,SAEpCnB,IAAAC,cAAA,SAAG,kBAAeD,IAAAC,cAACsI,IAAI,CAACnJ,KAAK,a,SCoBzB2M,MA3Bf,SAAmBlN,GACjB,IAAI,MAAE+F,GAAU/F,EAEhB,OACEmB,IAAAC,cAAC+L,IAAY,CAAC9K,MAAM,aAAa+K,UAAQ,GACvCjM,IAAAC,cAAC+L,IAAa5D,KAAI,CAACmC,MAAM,SACtB3F,EAAML,gBAETvE,IAAAC,cAAC+L,IAAa5D,KAAI,CAACmC,MAAM,gBACtB3F,EAAMsH,cAETlM,IAAAC,cAAC+L,IAAa5D,KAAI,CAACmC,MAAM,WAAW3F,EAAMuH,SAC1CnM,IAAAC,cAAC+L,IAAa5D,KAAI,CAACmC,MAAM,WAAW3F,EAAMwH,SAC1CpM,IAAAC,cAAC+L,IAAa5D,KAAI,CAACmC,MAAM,eAAejB,KAAM,GAC3C1E,EAAMyH,cAETrM,IAAAC,cAAC+L,IAAa5D,KAAI,CAACmC,MAAM,cACtB3F,EAAM0H,YAETtM,IAAAC,cAAC+L,IAAa5D,KAAI,CAACmC,MAAM,UAAU3F,EAAMoG,QACzChL,IAAAC,cAAC+L,IAAa5D,KAAI,CAACmC,MAAM,cACtB3F,EAAM2H,cCkFAC,MApGf,SAAkB3N,GAChB,MAAMgD,EAAUhD,EAAMgD,QAChB4K,EAAW5N,EAAM4N,SACjBC,EAAa7N,EAAM8N,UAAUzL,MAC7B0L,EAAY/N,EAAM8N,UAAUrI,cAC5BuI,EAAehO,EAAM8N,UAAUP,SAE9BU,EAAgBC,GAAqBrJ,mBAAS,IAC9CsJ,EAAWC,GAAgBvJ,oBAAS,GAE3C,IAAIwJ,EAAY,CACdT,SAAUA,EACV5K,QAASA,EACT6K,WAAYA,EACZE,UAAWA,EACXC,aAAcA,GA+ChB,OA5CA1N,oBAAU,KAERgO,IAAMnG,KAAK,+BAAgCkG,GAAWzN,KAAMC,IACtDA,EAASC,KAAKyK,QAChB2C,EAAkBrN,EAASC,KAAKmN,gBAEhCzC,MAAM,yGAKV8C,IAAMnG,KAAK,0BAA2BkG,GAAWzN,KAAMC,IACjDA,EAASC,KAAKyK,QAChB6C,EAAavN,EAASC,KAAKqN,WAE3B3C,MAAM,6FAGT,IA2BDrK,IAAAC,cAAA,WACED,IAAAC,cAACkF,IAAM,CACLC,QA3BkBgI,KAClBJ,EACFG,IAAMnG,KAAK,mCAAoCkG,GAAWzN,KACvDC,IACKA,EAASC,KAAKyK,SAChB2C,EAAkBD,EAAiB,GACnCG,GAAcD,IAEd3C,MAAM,qGAKZ8C,IAAMnG,KAAK,8BAA+BkG,GAAWzN,KAAMC,IACrDA,EAASC,KAAKyK,SAChB2C,EAAkBD,EAAiB,GACnCG,GAAcD,IAEd3C,MAAM,gGAURhK,MAAO,CACL4E,QAAS,OACT6G,WAAY,SACZlL,MAAO,QACPsE,eAAgB,WAGlBlF,IAAAC,cAAA,OACEiC,YAAU,OACVC,KAAM6K,EAAY,SAAW,OAC7B5K,YAAY,IACZC,OAAO,eACPC,QAAQ,YACRC,MAAM,6BACNC,cAAY,QAEZxC,IAAAC,cAAA,QACEwC,cAAc,QACdC,eAAe,QACfC,EAAE,qXAGN3C,IAAAC,cAAA,OACEI,MAAO,CACLW,WAAY,QAGb,WAAW,IAAE8L,MCfTO,MA3Ef,SAAqBxO,GACnB,IAAI,QAAEgD,GAAYyL,cAClB,MAAO1I,EAAO2I,GAAY7J,mBAAS,KAC5B8J,EAAOC,GAAY/J,mBAAS,KAC5BgK,EAAaC,GAAkBjK,oBAAS,GAmB/C,OAjBAvE,oBAAU,KACR,IAAIyO,EAAY,GAAApO,OAAMhB,EAAO,UAAAgB,OAASqC,EAAO,qBAAArC,OAAoBjB,EAAO,gBACpEsP,EAAY,GAAArO,OAAMhB,EAAO,UAAAgB,OAASqC,EAAO,aAAArC,OAAYjB,EAAO,gBAEhE0F,MAAM4J,GACHpO,KAAMC,GAAaA,EAASwE,QAC5BzE,KAAMC,GAAa6N,EAAS7N,IAE/BuE,MAAM2J,GACHnO,KAAMC,GAAaA,EAASwE,QAC5BzE,KAAMC,GAAa+N,EAAS/N,EAASoO,QACvC,IAOD9N,IAAAC,cAAA,WAEED,IAAAC,cAACG,EAAS,CACRG,MAAK,GAAAf,OAAKf,EAAc,SAAAe,OAAQoF,EAAMN,eACtCpD,MAAO0D,EAAML,eACbnD,KAAMwD,EAAMJ,WAIdxE,IAAAC,cAAA,OAAKI,MAAO,CAAEO,MAAO,MAAOyD,OAAQ,cAElCrE,IAAAC,cAAA,OAAKI,MAAO,CAAE4E,QAAS,OAAQC,eAAgB,aAC7ClF,IAAAC,cAACuM,EAAQ,CACPG,UAAW/H,EACX/C,QAASA,EACT4K,SAAU/G,aAAaC,QAAQ,aAInC3F,IAAAC,cAAC8L,EAAS,CAACnH,MAAOA,IAAS,IAC3B5E,IAAAC,cAAA,WAEAD,IAAAC,cAAA,OACEI,MAAO,CAAE4E,QAAS,OAAQC,eAAgB,SAAUb,OAAQ,SAE5DrE,IAAAC,cAACkF,IAAM,CAACC,QA9BQ2I,KACtBJ,GAAgBD,KA6BwB,sBAEnCA,GACC1N,IAAAC,cAACwE,IAAG,CAACC,OAAQ,CAAC,GAAI,KACf8I,GACCA,EAAM7I,IAAI,CAACmJ,EAAMjJ,IACf7E,IAAAC,cAACD,IAAM8E,SAAQ,CAACC,IAAKF,GACnB7E,IAAAC,cAACoB,EAAS,CACRd,MACEuN,EAAKE,aAAa,GAAAxO,OACXf,EAAc,QAAAe,OAAOsO,EAAKE,cAC7B,KAEN5K,SAAU0K,EAAKjE,KACfvG,cAAewK,EAAKG,UACpBlL,GAAI+K,EAAK/K,WCnEd,SAASmL,EAAarP,GACnC,MAAM,SAAEsP,GAAab,eAEdc,EAAYC,GAAiB3K,mBAAS,KACtCF,EAAQC,GAAaC,mBAAS,IAsBrC,OApBIF,GACF8K,QAAQC,IAAI/K,GAIdrE,oBAAU,KACR,IAAI4E,EAAQ,GAAAvE,OAAMhB,EAAO,WAAAgB,OAAU2O,EAAQ,2BAAA3O,OAA0BjB,EAAO,gBAC5E0F,MAAMF,GACHtE,KAAMC,GAAaA,EAASwE,QAC5BzE,KAAMC,GAAa+D,EAAU/D,EAASoO,QACxC,IAGH3O,oBAAU,KACR,IAAIqP,EAAc,GAAAhP,OAAMhB,EAAO,WAAAgB,OAAU2O,EAAQ,aAAA3O,OAAYjB,EAAO,gBACpE0F,MAAMuK,GACH/O,KAAMC,GAAaA,EAASwE,QAC5BzE,KAAMC,GAAa2O,EAAc3O,KACnC,IAGDM,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEI,MAAO,CACL4E,QAAS,OACTrE,MAAO,OACPiL,cAAe,SACfC,WAAY,WAGbsC,EAAWJ,aACVhO,IAAAC,cAAA,OACEI,MAAO,CACLO,MAAO,OACPqE,QAAS,OACTC,eAAgB,SAChBrC,UAAW,SAGb7C,IAAAC,cAAA,OACEI,MAAO,CACLO,MAAO,MACPH,OAAQ,OACRwC,aAAc,MACdC,UAAW,gCAEbpB,IAAG,GAAAtC,OAAKf,EAAc,QAAAe,OAAO4O,EAAWJ,cACxCjM,IAAKqM,EAAWvE,QAIpB7J,IAAAC,cAAA,OACEI,MAAO,CACL4E,QAAS,OACTrE,MAAO,MACPH,OAAQ,OACRwB,WAAY,UAGdjC,IAAAC,cAAA,OACEkC,KAAK,OACLG,QAAQ,YACRC,MAAM,6BACNC,cAAY,QAEZxC,IAAAC,cAAA,QAAM0C,EAAE,mLAId3C,IAAAC,cAAA,OACEI,MAAO,CACL4E,QAAS,OACT4G,cAAe,SACfC,WAAY,WAGd9L,IAAAC,cAAA,KACEI,MAAO,CACLc,SAAU,SACVyB,WAAY,OACZjB,aAAc,OACdkB,UAAW,SAGZuL,EAAWvE,MAEd7J,IAAAC,cAAA,KAAGI,MAAO,CAAEc,SAAU,OAAQ6B,eAAgB,SAC3CoL,EAAWK,eAAe,KAAGL,EAAWM,SAAS,OAKxD1O,IAAAC,cAAA,OAAKI,MAAO,CAAEO,MAAO,MAAOyD,OAAQ,cAClCrE,IAAAC,cAAA,UAAI,6BACJD,IAAAC,cAAA,WAEAD,IAAAC,cAACwE,IAAG,CAACC,OAAQ,CAAC,GAAI,KACflB,GACCA,EAAOmB,IAAI,CAACC,EAAOC,IACjB7E,IAAAC,cAACD,IAAM8E,SAAQ,CAACC,IAAKF,GACnB7E,IAAAC,cAACoB,EAAS,CACRC,aAAW,EACXf,MACEqE,EAAMI,YAAY,GAAAxF,OACXf,EAAc,QAAAe,OAAOoF,EAAMI,aAC9B,KAENnD,QAAS+C,EAAM7B,GACff,UAAW4C,EAAML,sB,OCjBpBoK,MAjGf,WACE,MAAOC,EAAWC,GAAgBnL,mBAAS,IAG3CvE,oBAAU,KACR2P,KACC,IAEH,MAAMA,EAAoBA,KAExB3B,IAAMnG,KAAK,gCAAiC,CAC1CyF,SAAU/G,aAAaC,QAAQ,YAC9BlG,KAAMC,IACHA,EAASC,KAAKyK,QAEhByE,EAAanP,EAASC,KAAKiP,WAE3BvE,MAAM,4GA0BN0E,EAAcH,EAAUjK,IAAI,CAACqK,EAAUnK,KAC3C,MAAMoK,EACJjP,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAG2B,KAAI,UAAApC,OAAYwP,EAASnN,UACzBmN,EAASpC,UACR5M,IAAAC,cAAA,OACE6B,IAAG,GAAAtC,OAAKf,EAAc,QAAAe,OAAOwP,EAASpC,WACtCvM,MAAO,CAAEO,MAAO,OAAQH,OAAQ,UAGlC,aAMR,OACET,IAAAC,cAAA,MAAI8E,IAAKF,GACP7E,IAAAC,cAAA,UAAKgP,GACLjP,IAAAC,cAAA,UAAK+O,EAAStC,YACd1M,IAAAC,cAAA,UAAK+O,EAASnC,aAAa,SAC3B7M,IAAAC,cAAA,UACED,IAAAC,cAAA,UACEmF,QAASA,IA3CG8J,EAACrN,EAAS4K,KAC9B,MAAMS,EAAY,CAChBrL,UACA4K,YAIFU,IAAMnG,KAAK,mCAAoCkG,GAAWzN,KACvDC,IACKA,EAASC,KAAKyK,QAChB0E,IAEAzE,MAAM,oGA+BW6E,CAAcF,EAASnN,QAASmN,EAASvC,WACzD,cAST,OACEzM,IAAAC,cAAA,OAAKI,MAAO,CAAEO,MAAO,MAAOyD,OAAQ,cAClCrE,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,WAEAD,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,UAAI,2BAIRD,IAAAC,cAAA,aAAQ8O,MCpDDI,MA5Bf,WACE,OACEnP,IAAAC,cAACmP,WAAQ,CAACC,SAAUrP,IAAAC,cAAA,WAAK,eACvBD,IAAAC,cAACiL,EAAM,MACPlL,IAAAC,cAAA,OAAKI,MAAO,CAAE4B,WAAY,OAAQqN,UAAW,uBAC3CtP,IAAAC,cAACsP,IAAM,KACLvP,IAAAC,cAACuP,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,UAAWC,EAAKrM,EAAa,QACnDvD,IAAAC,cAACuP,IAAK,CAACC,OAAK,EAACC,KAAK,SAASC,UAAWC,EAAKC,GAAW,KACtD7P,IAAAC,cAACuP,IAAK,CAACC,OAAK,EAACC,KAAK,YAAYC,UAAWC,EAAKjG,GAAc,KAE5D3J,IAAAC,cAACuP,IAAK,CACJC,OAAK,EACLC,KAAK,kBACLC,UAAWC,EAAKvC,EAAa,QAE/BrN,IAAAC,cAACuP,IAAK,CACJC,OAAK,EACLC,KAAK,oBACLC,UAAWC,EAAK1B,EAAc,QAEhClO,IAAAC,cAACuP,IAAK,CAACC,OAAK,EAACC,KAAK,YAAYC,UAAWC,EAAKjB,GAAc,OAGhE3O,IAAAC,cAAC2L,EAAM,QC5BOkE,QACW,cAA7B3I,OAAO4I,SAASC,UAEe,UAA7B7I,OAAO4I,SAASC,UAEhB7I,OAAO4I,SAASC,SAASC,MACvB,2D,qBCXSC,MAJKC,YAAgB,CAChCrR,KCIW,SAASE,EAAM,GAAGoR,GAC7B,OAAOA,EAAOhR,MACV,IrBTqB,gBqBUjB,MAAO,IAAIJ,EAAOqR,SAAUD,EAAO/Q,SACvC,IrBZkB,aqBad,MAAO,IAAKL,EAAOsR,YAAaF,EAAO/Q,SAC3C,IrBZiB,YqBab,MAAO,IAAIL,EAAOiM,SAAUmF,EAAO/Q,SACvC,IrBbmB,cqBcf,MAAO,IAAIL,GACf,QACI,OAAOA,M,2BCFnB,MAAMuR,GAA4BC,YAAgBC,IAAmBC,IAAnCF,CAA+CG,KAEjFC,IAASC,OACL7Q,IAAAC,cAAC6Q,IAAQ,CACLC,MAAOR,GACHS,EACA7J,OAAO8J,8BACP9J,OAAO8J,iCAGXjR,IAAAC,cAACiR,IAAa,KACVlR,IAAAC,cAACkP,EAAG,QAGVgC,SAASC,eAAe,SHkGxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9R,KAAK+R,IACjCA,EAAaC,iB","file":"static/js/main.c36352d6.chunk.js","sourcesContent":["export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = \"/api/users\";\r\n\r\nexport const API_KEY = \"a2d9d8e022b43127fd4f16913a183eba\";\r\nexport const API_URL = \"https://api.themoviedb.org/3/\"; //URL에서 중복되는 부분 상수처리\r\nexport const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\"; //이미지 가져오는 URL에서 중복되는 부분 상수처리\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default function MainImage(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `linear-gradient(to bottom, rgba(0,0,0,0) 39%, rgba(0,0,0,0) 41%, rgba(0,0,0,0.65) 100%),\r\n          url('${props.image}')`,\r\n        backgroundColor: \"#1c1c1c\",\r\n        height: \"500px\",\r\n        backgroundSize: \"100%, cover\",\r\n        backgroundPosition: \"center, center\",\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            maxWidth: \"500px\",\r\n            bottom: \"2rem\",\r\n            marginLeft: \"2rem\",\r\n          }}\r\n        >\r\n          <h2 style={{ color: \"white\" }}>{props.title}</h2>\r\n          <p style={{ color: \"white\", fontSize: \"0.8rem\" }}>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Col } from \"antd\";\r\n\r\nexport default function GridCards(props) {\r\n  // landing페이지에 관한 grid\r\n  if (props.landingPage) {\r\n    return (\r\n      // large size일때는 6 (한 column에 24size이므로, 4개씩 넣는다는 뜻)\r\n      <Col lg={6} md={8} xs={24}>\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"400px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          <a href={`/movie/${props.movieId}`}>\r\n            {props.image ? (\r\n              <img\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n                src={props.image}\r\n                alt={props.movieName}\r\n              />\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"220px\",\r\n                  paddingTop: \" 2rem\",\r\n                }}\r\n              >\r\n                <svg\r\n                  data-slot=\"icon\"\r\n                  fill=\"none\"\r\n                  strokeWidth=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 0 1-1.125-1.125M3.375 19.5h1.5C5.496 19.5 6 18.996 6 18.375m-3.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-1.5A1.125 1.125 0 0 1 18 18.375M20.625 4.5H3.375m17.25 0c.621 0 1.125.504 1.125 1.125M20.625 4.5h-1.5C18.504 4.5 18 5.004 18 5.625m3.75 0v1.5c0 .621-.504 1.125-1.125 1.125M3.375 4.5c-.621 0-1.125.504-1.125 1.125M3.375 4.5h1.5C5.496 4.5 6 5.004 6 5.625m-3.75 0v1.5c0 .621.504 1.125 1.125 1.125m0 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m1.5-3.75C5.496 8.25 6 7.746 6 7.125v-1.5M4.875 8.25C5.496 8.25 6 8.754 6 9.375v1.5m0-5.25v5.25m0-5.25C6 5.004 6.504 4.5 7.125 4.5h9.75c.621 0 1.125.504 1.125 1.125m1.125 2.625h1.5m-1.5 0A1.125 1.125 0 0 1 18 7.125v-1.5m1.125 2.625c-.621 0-1.125.504-1.125 1.125v1.5m2.625-2.625c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125M18 5.625v5.25M7.125 12h9.75m-9.75 0A1.125 1.125 0 0 1 6 10.875M7.125 12C6.504 12 6 12.504 6 13.125m0-2.25C6 11.496 5.496 12 4.875 12M18 10.875c0 .621-.504 1.125-1.125 1.125M18 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m-12 5.25v-5.25m0 5.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125m-12 0v-1.5c0-.621-.504-1.125-1.125-1.125M18 18.375v-5.25m0 5.25v-1.5c0-.621.504-1.125 1.125-1.125M18 13.125v1.5c0 .621.504 1.125 1.125 1.125M18 13.125c0-.621.504-1.125 1.125-1.125M6 13.125v1.5c0 .621-.504 1.125-1.125 1.125M6 13.125C6 12.504 5.496 12 4.875 12m-1.5 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M19.125 12h1.5m0 0c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h1.5m14.25 0h1.5\"\r\n                  ></path>\r\n                </svg>\r\n                <p\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: \"1rem\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"0rem\",\r\n                    marginTop: \"0.2rem\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {props.movieName}\r\n                </p>\r\n              </div>\r\n            )}\r\n          </a>\r\n        </div>\r\n      </Col>\r\n    );\r\n  } else {\r\n    // 배우 정보에 대한 grid\r\n    return (\r\n      <Col lg={4} md={6} xs={12}>\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"300px\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <a\r\n            href={`/person/${props.id}`}\r\n            style={{ textDecoration: \"none\", color: \"black\" }} // 링크 스타일 수정\r\n          >\r\n            {props.image ? (\r\n              <img\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"90%\",\r\n                  borderRadius: \"5px\",\r\n                  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n                src={props.image}\r\n                alt={props.castName}\r\n              />\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  borderRadius: \"5px\",\r\n                  width: \"100%\",\r\n                  height: \"90%\",\r\n                  paddingTop: \" 2.5rem\",\r\n                  paddingBottom: \" 2.3rem\",\r\n                  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n                }}\r\n              >\r\n                <svg\r\n                  fill=\"gray\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <path d=\"M10 8a3 3 0 100-6 3 3 0 000 6zM3.465 14.493a1.23 1.23 0 00.41 1.412A9.957 9.957 0 0010 18c2.31 0 4.438-.784 6.131-2.1.43-.333.604-.903.408-1.41a7.002 7.002 0 00-13.074.003z\" />\r\n                </svg>\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              <p\r\n                style={{\r\n                  fontSize: \"0.8rem\",\r\n                  fontWeight: \"bold\",\r\n                  marginBottom: \"0rem\",\r\n                  marginTop: \"0.2rem\",\r\n                }}\r\n              >\r\n                {props.castName}\r\n              </p>\r\n              <p style={{ fontSize: \"0.8rem\", textDecoration: \"bold\" }}>\r\n                {props.characterName}\r\n              </p>\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from \"../../Config\";\r\nimport MainImage from \"./Sections/MainImage\";\r\nimport GridCards from \"../commons/GridCards\";\r\nimport { Button, Row } from \"antd\";\r\n\r\nexport default function LandingPage() {\r\n  const [movies, setMovies] = useState([]); // 인기 영화들 담을 배열\r\n  const [mainImage, setMainImage] = useState(null); // 가장 인기있는 영화의 이미지\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  // 처음 로드될 때, 영화 정보 가져오기\r\n  useEffect(() => {\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=ko&page=1`; //20개의 가장 유명한 영화들 가져옴\r\n    fetchMovies(endpoint);\r\n  }, []);\r\n\r\n  // load more 버튼을 눌렀을 때, 추가 영화 목록 가져오기\r\n  const loadMoreItems = () => {\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=ko&page=${\r\n      currentPage + 1\r\n    }`;\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  const fetchMovies = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((response) => response.json()) //json메소드로 받아온 응답을 json화\r\n      .then((response) => {\r\n        // console.log(response);\r\n        setMovies([...movies, ...response.results]); //받은 응답을 movies에 추가\r\n        setMainImage(response.results[0]);\r\n        setCurrentPage(response.page); // 처음 받아온 페이지 정보로, state 설정\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", margin: \"0\" }}>\r\n      {/* mainImage를 받아온다면, 이미지 컴포넌트를 생성하라. */}\r\n      {mainImage && (\r\n        <MainImage\r\n          image={`${IMAGE_BASE_URL}w1280${mainImage.backdrop_path}`}\r\n          title={mainImage.original_title}\r\n          text={mainImage.overview}\r\n        />\r\n      )}\r\n\r\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\r\n        <h2>Movies by latest</h2>\r\n        <hr />\r\n\r\n        {/* movie grid cards - gutter로 상하좌우 여백 생성*/}\r\n        <Row gutter={[16, 16]}>\r\n          {movies &&\r\n            movies.map((movie, index) => (\r\n              <React.Fragment key={index}>\r\n                <GridCards\r\n                  landingPage\r\n                  image={\r\n                    movie.poster_path //포스터 이미지가 있다면 보여주고 없으면, null\r\n                      ? `${IMAGE_BASE_URL}w500${movie.poster_path}`\r\n                      : null\r\n                  }\r\n                  movieId={movie.id}\r\n                  movieName={movie.original_title}\r\n                />\r\n              </React.Fragment>\r\n            ))}\r\n        </Row>\r\n      </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Button onClick={loadMoreItems}>Load more</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                  </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Name is required'),\r\n        lastName: Yup.string()\r\n          .required('Last Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n      <Menu.Item key=\"mail\">\r\n        <a href=\"/\">Home</a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"favorite\">\r\n        <a href=\"/favorite\">Favorite</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default LeftMenu;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Menu } from 'antd';\r\nimport axios from 'axios';\r\nimport { USER_SERVER } from '../../../Config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector(state => state.user)\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then(response => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert('Log Out Failed')\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">Signin</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">Signup</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"logout\">\r\n          <a onClick={logoutHandler}>Logout</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n\r\n","import React, { useState } from \"react\";\r\nimport LeftMenu from \"./Sections/LeftMenu\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { Drawer, Button, Icon } from \"antd\";\r\nimport \"./Sections/Navbar.css\";\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"menu\"\r\n      style={{ position: \"fixed\", zIndex: 5, width: \"100%\" }}\r\n    >\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">Movie World</a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react'\r\nimport {Icon} from 'antd';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{\r\n            height: '80px', display: 'flex',\r\n            flexDirection: 'column', alignItems: 'center',\r\n            justifyContent: 'center', fontSize:'1rem'\r\n        }}>\r\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Descriptions } from \"antd\";\r\nimport React from \"react\";\r\n\r\nfunction MovieInfo(props) {\r\n  let { movie } = props;\r\n\r\n  return (\r\n    <Descriptions title=\"Movie Info\" bordered>\r\n      <Descriptions.Item label=\"Title\">\r\n        {movie.original_title}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Release_date\">\r\n        {movie.release_date}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Revenue\">{movie.revenue}</Descriptions.Item>\r\n      <Descriptions.Item label=\"Runtime\">{movie.runtime}</Descriptions.Item>\r\n      <Descriptions.Item label=\"Vote_Average\" span={2}>\r\n        {movie.vote_average}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Vote_Count\">\r\n        {movie.vote_count}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Status\">{movie.status}</Descriptions.Item>\r\n      <Descriptions.Item label=\"Popularity\">\r\n        {movie.popularity}\r\n      </Descriptions.Item>\r\n    </Descriptions>\r\n  );\r\n}\r\n\r\nexport default MovieInfo;\r\n","import { Button } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// 프론트엔드 favorite\r\n\r\nfunction Favorite(props) {\r\n  const movieId = props.movieId;\r\n  const userFrom = props.userFrom;\r\n  const movieTitle = props.movieInfo.title;\r\n  const moviePost = props.movieInfo.backdrop_path;\r\n  const movieRunTime = props.movieInfo.runtime;\r\n\r\n  const [favoriteNumber, setFavoriteNumber] = useState(0);\r\n  const [favorited, setFavorited] = useState(false);\r\n\r\n  let variables = {\r\n    userFrom: userFrom, //누가 좋아요 눌렀는지\r\n    movieId: movieId,\r\n    movieTitle: movieTitle,\r\n    moviePost: moviePost,\r\n    movieRunTime: movieRunTime,\r\n  };\r\n\r\n  useEffect(() => {\r\n    //해당 주소로 요청 보내서, 좋아요 수 가져오기\r\n    Axios.post(\"/api/favorite/favoriteNumber\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setFavoriteNumber(response.data.favoriteNumber);\r\n      } else {\r\n        alert(\"숫자 정보를 가져오는데 실패했습니다\");\r\n      }\r\n    });\r\n\r\n    // 좋아요 여부 정보\r\n    Axios.post(\"/api/favorite/favorited\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setFavorited(response.data.favorited);\r\n      } else {\r\n        alert(\"정보를 가져오는데 실패했습니다\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onClickFavorite = () => {\r\n    if (favorited) {\r\n      Axios.post(\"/api/favorite/removeFromFavorite\", variables).then(\r\n        (response) => {\r\n          if (response.data.success) {\r\n            setFavoriteNumber(favoriteNumber - 1);\r\n            setFavorited(!favorited);\r\n          } else {\r\n            alert(\"Favorite 리스트에서 삭제를 실패했습니다\");\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      Axios.post(\"/api/favorite/addToFavorite\", variables).then((response) => {\r\n        if (response.data.success) {\r\n          setFavoriteNumber(favoriteNumber + 1);\r\n          setFavorited(!favorited);\r\n        } else {\r\n          alert(\"Favorite 리스트에 추가를 실패했습니다\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={onClickFavorite}\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          width: \"115px\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <svg\r\n          data-slot=\"icon\"\r\n          fill={favorited ? \"yellow\" : \"none\"}\r\n          strokeWidth=\"1\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d=\"M11.48 3.499a.562.562 0 0 1 1.04 0l2.125 5.111a.563.563 0 0 0 .475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 0 0-.182.557l1.285 5.385a.562.562 0 0 1-.84.61l-4.725-2.885a.562.562 0 0 0-.586 0L6.982 20.54a.562.562 0 0 1-.84-.61l1.285-5.386a.562.562 0 0 0-.182-.557l-4.204-3.602a.562.562 0 0 1 .321-.988l5.518-.442a.563.563 0 0 0 .475-.345L11.48 3.5Z\"\r\n          ></path>\r\n        </svg>\r\n        <div\r\n          style={{\r\n            marginLeft: \"3px\",\r\n          }}\r\n        >\r\n          {\"Favorite\"} {favoriteNumber}\r\n        </div>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favorite;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { API_KEY, API_URL, IMAGE_BASE_URL } from \"../../Config\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MainImage from \"../LandingPage/Sections/MainImage\";\r\nimport MovieInfo from \"./Sections/MovieInfo\";\r\nimport { Button, Row } from \"antd\";\r\nimport GridCards from \"../commons/GridCards\";\r\nimport Favorite from \"./Sections/Favorite\";\r\n\r\nfunction MovieDetail(props) {\r\n  let { movieId } = useParams(); //movieId를 가져오는 부분\r\n  const [movie, setMovie] = useState([]); // 영화 detail info\r\n  const [casts, setCasts] = useState([]); // 출연진 info\r\n  const [actorToggle, setActorToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let endpointCast = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=ko`;\r\n    let endpointInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=ko`;\r\n\r\n    fetch(endpointInfo)\r\n      .then((response) => response.json())\r\n      .then((response) => setMovie(response)); //movie변수에 특정 id의 영화 detail정보 저장\r\n\r\n    fetch(endpointCast)\r\n      .then((response) => response.json())\r\n      .then((response) => setCasts(response.cast));\r\n  }, []);\r\n\r\n  const toggleActorView = () => {\r\n    setActorToggle(!actorToggle);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* header */}\r\n      <MainImage\r\n        image={`${IMAGE_BASE_URL}w1280${movie.backdrop_path}`}\r\n        title={movie.original_title}\r\n        text={movie.overview}\r\n      />\r\n\r\n      {/* body */}\r\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\r\n        {/* favorite 버튼 */}\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Favorite\r\n            movieInfo={movie}\r\n            movieId={movieId}\r\n            userFrom={localStorage.getItem(\"userId\")}\r\n          />\r\n        </div>\r\n        {/* Movie Info */}\r\n        <MovieInfo movie={movie} /> {/*영화 detail정보 넘겨줌*/}\r\n        <br />\r\n        {/* Actors Grid */}\r\n        <div\r\n          style={{ display: \"flex\", justifyContent: \"center\", margin: \"2rem\" }}\r\n        >\r\n          <Button onClick={toggleActorView}>Toggle Actor View</Button>\r\n        </div>\r\n        {actorToggle && (\r\n          <Row gutter={[16, 16]}>\r\n            {casts &&\r\n              casts.map((cast, index) => (\r\n                <React.Fragment key={index}>\r\n                  <GridCards\r\n                    image={\r\n                      cast.profile_path //이미지가 있다면 보여주고 없으면, null\r\n                        ? `${IMAGE_BASE_URL}w500${cast.profile_path}`\r\n                        : null\r\n                    }\r\n                    castName={cast.name}\r\n                    characterName={cast.character}\r\n                    id={cast.id}\r\n                  />\r\n                </React.Fragment>\r\n              ))}\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { API_KEY, API_URL, IMAGE_BASE_URL } from \"../../../Config\";\r\nimport { Row } from \"antd\";\r\nimport GridCards from \"../../commons/GridCards\";\r\n\r\nexport default function PersonDetail(props) {\r\n  const { personId } = useParams(); //personId 가져오는 부분\r\n\r\n  const [personInfo, setPersonInfo] = useState([]);\r\n  const [movies, setMovies] = useState([]); // 영화들 담을 배열\r\n\r\n  if (movies) {\r\n    console.log(movies);\r\n  }\r\n\r\n  // 처음 로드될 때, 출연 영화 정보 가져오기\r\n  useEffect(() => {\r\n    let endpoint = `${API_URL}person/${personId}/movie_credits?api_key=${API_KEY}&language=ko`; //출연한 다른 영화\r\n    fetch(endpoint)\r\n      .then((response) => response.json())\r\n      .then((response) => setMovies(response.cast));\r\n  }, []);\r\n\r\n  // 처음 로드될 때, 배우 정보 가져오기\r\n  useEffect(() => {\r\n    let endpointPerson = `${API_URL}person/${personId}?api_key=${API_KEY}&language=ko`; //출연한 다른 영화\r\n    fetch(endpointPerson)\r\n      .then((response) => response.json())\r\n      .then((response) => setPersonInfo(response));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"100%\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {personInfo.profile_path ? (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \" 5px\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                width: \"15%\",\r\n                height: \"auto\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n              }}\r\n              src={`${IMAGE_BASE_URL}w500${personInfo.profile_path}`}\r\n              alt={personInfo.name}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"17%\",\r\n              height: \"auto\",\r\n              paddingTop: \" 1rem\",\r\n            }}\r\n          >\r\n            <svg\r\n              fill=\"gray\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <path d=\"M10 8a3 3 0 100-6 3 3 0 000 6zM3.465 14.493a1.23 1.23 0 00.41 1.412A9.957 9.957 0 0010 18c2.31 0 4.438-.784 6.131-2.1.43-.333.604-.903.408-1.41a7.002 7.002 0 00-13.074.003z\" />\r\n            </svg>\r\n          </div>\r\n        )}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              fontSize: \"1.2rem\",\r\n              fontWeight: \"bold\",\r\n              marginBottom: \"0rem\",\r\n              marginTop: \"1rem\",\r\n            }}\r\n          >\r\n            {personInfo.name}\r\n          </p>\r\n          <p style={{ fontSize: \"1rem\", textDecoration: \"bold\" }}>\r\n            {personInfo.place_of_birth} ({personInfo.birthday})\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\r\n        <h2>출연 영화</h2>\r\n        <hr />\r\n\r\n        <Row gutter={[16, 16]}>\r\n          {movies &&\r\n            movies.map((movie, index) => (\r\n              <React.Fragment key={index}>\r\n                <GridCards\r\n                  landingPage\r\n                  image={\r\n                    movie.poster_path //포스터 이미지가 있다면 보여주고 없으면, null\r\n                      ? `${IMAGE_BASE_URL}w500${movie.poster_path}`\r\n                      : null\r\n                  }\r\n                  movieId={movie.id}\r\n                  movieName={movie.original_title}\r\n                />\r\n              </React.Fragment>\r\n            ))}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./favoritePage.css\";\r\nimport Axios from \"axios\";\r\nimport { Popover } from \"antd\";\r\nimport { IMAGE_BASE_URL } from \"../../Config\";\r\n\r\nfunction FavoritePage() {\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  //컴포넌트 로드 시 데이터 가져옴\r\n  useEffect(() => {\r\n    fetchFavoredMovie();\r\n  }, []);\r\n\r\n  const fetchFavoredMovie = () => {\r\n    // 서버에 userId를 보내고, 즐겨찾기한 영화 목록을 요청\r\n    Axios.post(\"/api/favorite/getFavoredMovie\", {\r\n      userFrom: localStorage.getItem(\"userId\"),\r\n    }).then((response) => {\r\n      if (response.data.success) {\r\n        //favorites 상태를 업데이트\r\n        setFavorites(response.data.favorites);\r\n      } else {\r\n        alert(\"영화 정보를 가져오는데 실패 했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //영화 ID와 사용자 ID 받아 즐겨찾기에서 해당 영화 삭제\r\n  const onClickDelete = (movieId, userFrom) => {\r\n    const variables = {\r\n      movieId,\r\n      userFrom,\r\n    };\r\n\r\n    // 삭제 요청 후 다시 불러옴\r\n    Axios.post(\"/api/favorite/removeFromFavorite\", variables).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          fetchFavoredMovie();\r\n        } else {\r\n          alert(\"리스트에서 지우는데 실패했습니다.\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  //즐겨찾기 영화 목록 렌더링\r\n  //favorites 배열 순회하며 각 즐겨찾기 영화를 테이블 행(tr)으로 렌더링\r\n  const renderCards = favorites.map((favorite, index) => {\r\n    const content = (\r\n      <div>\r\n        <a href={`/movie/${favorite.movieId}`}>\r\n          {favorite.moviePost ? (\r\n            <img\r\n              src={`${IMAGE_BASE_URL}w500${favorite.moviePost}`}\r\n              style={{ width: \"20vw\", height: \"auto\" }}\r\n            />\r\n          ) : (\r\n            \"no image\"\r\n          )}\r\n        </a>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <tr key={index}>\r\n        <td>{content}</td>\r\n        <td>{favorite.movieTitle}</td>\r\n        <td>{favorite.movieRunTime} mins</td>\r\n        <td>\r\n          <button\r\n            onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}\r\n          >\r\n            Remove\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  //전체 레이아웃과 테이블 구조 반환\r\n  return (\r\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\r\n      <h2> Favorite Movies </h2>\r\n      <hr />\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Movie Poster</th>\r\n            <th>Movie Title</th>\r\n            <th>Movie RunTime</th>\r\n            <td>Remove from favorites</td>\r\n          </tr>\r\n        </thead>\r\n        {/* renderCards를 호출하여 테이블 본문(tbody)에 즐겨찾기 영화 목록 렌더링 */}\r\n        <tbody>{renderCards}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoritePage;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\";\r\nimport MovieDetail from \"./views/MovieDetail/MovieDetail.js\";\r\nimport PersonDetail from \"./views/MovieDetail/Sections/PersonDetail.js\";\r\nimport FavoritePage from \"./views/FavoritePage/FavoritePage.js\";\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          {/*아무나 페이지에 들어올 수 있도록 null*/}\r\n          <Route\r\n            exact\r\n            path=\"/movie/:movieId\"\r\n            component={Auth(MovieDetail, null)}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/person/:personId\"\r\n            component={Auth(PersonDetail, null)}\r\n          />\r\n          <Route exact path=\"/favorite\" component={Auth(FavoritePage, true)} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}